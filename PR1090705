#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <cmath>

using namespace std;

int main()
{
    int t;
    int arr[1000][2], x, y;
    cin >> t;
    for (int i = 0; i < t; i++)
    {
        int n;
        cin >> n;
        int arr[n][2];
        for (int j = 0; j < n; j++)
        {
            cin >> x >> y;
            arr[j][0] = x; //stores the x coordinate
            arr[j][1] = y; //stores the y coordinate
        }

        for (int k = 0; k < n-1; k++) //sorts the points from the biggest x to the smallest
        {
            for (int j = 0; j < n-1; j++)
            {
                if (arr[j+1][0] > arr[j][0])
                {
                int tmp;
                tmp = arr[j][0];
                arr[j][0] = arr[j+1][0];
                arr[j+1][0] = tmp;

                tmp = arr[j][1];
                arr[j][1] = arr[j+1][1];
                arr[j+1][1] = tmp;
                }
            }
        }

        float answer = 0;
        float peak = 0; //gets the next higher point
        float x1, y1, x2, y2, xn;

        for (int j = 1; j < n; j++)
        {
            if (peak < arr[j][1])
            {
                x1 = arr[j-1][0];
                y1 = arr[j-1][1];
                x2 = arr[j][0];
                y2 = arr[j][1];
                xn = (((peak-y1)*(x2-x1))/(y2-y1)) + x1;
                answer += sqrt((y2-peak) * (y2-peak) + (xn-x2) * (xn-x2));
                peak = arr[j][1]; //sets the current point as peak
            }
        }

        cout << answer << endl;
    }
    return 0;
}

/*
Test case
2
11
1100 1200
0 500
1400 100
600 600
2800 0
400 1100
1700 600
1500 800
2100 300
1800 700
2400 500

1446.34

2
0 1000
1000 0

1414.21
*/
