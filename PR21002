#include <iostream>
#include <string>
#include <algorithm>

using namespace std;

struct Morse
{
    char character;
    string code;
};

struct Words
{
    string word;
    string translated;
    int flag;
};


int main()
{
    /*cout << "Hello world!" << endl;*/

    Morse lib[1000];
    Words arr[1000];
    int cnt = 0, i = 0;

    while(true) 				//take char and respective code
    {
        cin >> lib[i].character;		//takes letter
        if (lib[i].character == '*')
            break;
        cin >> lib[i].code;			//takes code
        cnt++;					//count the number of char
        i++;
    }


    i = 0;
    int wordCount = 0;
    while(true) 				//take word and translate them
    {
        cin >> arr[i].word;			//take word
        if (arr[i].word == "*")
            break;

        for (int j = 0; j < arr[i].word.length(); j++)
	{
            for (int k = 0; k < cnt; k++)
		{
                if (arr[i].word[j] == lib[k].character)
		{
                    arr[i].translated += lib[k].code;		//translated assign to that code of that letter
                }
            }
        }
        i++;
        wordCount++;						//counts how many words in word count
    }

    ///so now word and its translation stored in words struct


    int index = 999;				//used to see if trans word is used or not
    i = 0;
    string switchMorse;
    while(true)
    {
        cin >> switchMorse;			//the code we want to translate
        if (switchMorse == "*")
            break;

        for (i = 0; i < wordCount; i++)
	{
            if (arr[i].translated == switchMorse && index == 999) //since this is true the index now changes to i
	    {
                index = i;
                arr[index].flag = 1;
            }

            else if (arr[i].translated == switchMorse && arr[index].flag == 1)  //if translated word occur more than once
	    {
                arr[index].flag = 2;		//indicated that we have to print out the word with !
                break;
            }
        }

        if (index != 999)
	{
            if (arr[index].flag == 2)
                cout << arr[index].word << "!" << endl;
            else if (arr[index].flag == 1)
                cout << arr[index].word << endl;
            index = 999;
            continue;
        }

        int diff[1000];
        int smallest = 9999;				//search for smallest difference
        int idx = 0;
        for (i = 0; i < wordCount; i++)
	{
            diff[i] = 0;
            for (int j = 0; j < min(arr[i].translated.length(), switchMorse.length()); j++)
	    {
                if (arr[i].translated[j] != switchMorse[j])
                    diff[i]++;
            }

            diff[i] += max(arr[i].translated.length(), switchMorse.length()) - min(arr[i].translated.length(), switchMorse.length());
            if (smallest > diff[i])
	    {
                smallest = diff[i];
                idx = i;
            }
        }
        cout << arr[idx].word << "?" << endl; 	// if it is difference it puts the ?
    }

    return 0;
}

/*
A .-
B -...
C -.-.
D -..
E .
F ..-.
G --.
H ....
I ..
J .---
K -.-
L .-..
M --
N -.
O ---
P .--.
Q --.-
R .-.
S ...
T -
U ..-
V ...-
W .--
X -..-
Y -.--
Z --..
0 ------
1 .-----
2 ..---
3 ...--
4 ....-
5 .....
6 -....
7 --...
8 ---..
9 ----.
*
AN
EARTHQUAKE
EAT
GOD
HATH
IM
READY
TO
WHAT
WROTH
*
.--.....-- .....--....
--.----.. .--.-.----..
.--.....-- .--.
..-.-.-....--.-..-.--.-.
..-- .-...--..-.--
---- ..--
*

*
.-- .... .- - .... .- - ....
WHAT
HATH
--.----.. .--.-.----..
GOD
WROTH?
.--.....-- .--.
WHAT
AN
..-.-.-....--.-..-.--.-.
EARTHQUAKE
..-- .-...--..-.--
EAT!
READY
---- ..--
TO
EAT!
*

*/
